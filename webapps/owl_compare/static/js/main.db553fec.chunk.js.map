{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Object","assign","ReactTableDefaults","defaultPageSize","showPageSizeOptions","props","state","start_flag","rule_arr","A금융적격","B금융적격","C금융적격","D금융적격","E금융적격","F금융적격","G금융적격","H금융적격","I금융적격","J금융적격","K금융적격","대통령령기준금액","금융위원회가정한금액","적격count","A_대통령령_30_2","B_대통령령_30_2","C_대통령령_30_2","D_대통령령_30_2","E_대통령령_30_2","F_대통령령_30_2","G_대통령령_30_2","H_대통령령_30_2","I_대통령령_30_2","J_대통령령_30_2","K_대통령령_30_2","A_대통령령_30_3_1","B_대통령령_30_3_1","C_대통령령_30_3_1","D_대통령령_30_3_1","E_대통령령_30_3_1","F_대통령령_30_3_1","G_대통령령_30_3_1","H_대통령령_30_3_1","I_대통령령_30_3_1","J_대통령령_30_3_1","K_대통령령_30_3_1","A_대통령령_30_3_2","B_대통령령_30_3_2","C_대통령령_30_3_2","D_대통령령_30_3_2","E_대통령령_30_3_2","F_대통령령_30_3_2","G_대통령령_30_3_2","H_대통령령_30_3_2","I_대통령령_30_3_2","J_대통령령_30_3_2","K_대통령령_30_3_2","A금융기관","총자산","총부채","신청업무","가맹점위치","총발행잔액","가입범위","자본금","회사의종류","출자총액","전분기전자금융거래총액","금분기전자금융거래총액","미상환잔액","투자위험성낮은자산","미정산잔액","금융위원회등록여부","금융위원회허가여부","유동성비율","자기자본","납입자본금","B금융기관","분기별전자금융거래총액","C금융기관","D금융기관","E금융기관","F금융기관","G금융기관","H금융기관","I금융기관","J금융기관","K금융기관","handleChange","bind","handleSubmit","A","B","C","D","E","getrule","this","setTimeout","set_president","setState","event","update","3","$set","target","value","대통령령이정한금액_30_2","대통령령이정한금액_30_3_2","대통령령이정한금액_30_3_1","eval","count적격","split_rule","decodeURI","hash","split","columns","Header","accessor","data","datasets","backgroundColor","hoverBackgroundColor","labels","data_table","name","status","input_style1","fontSize","style","position","width","float","textAlign","marginTop","onSubmit","type","onChange","console","log","fontWeight","onClick","marginBottom","marginRight","Component"],"mappings":"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","file":"static/js/main.db553fec.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport update from 'react-addons-update';\nimport './App.css';\nimport 'react-splitter-layout/lib/index.css';\nimport TextareaAutosize from 'react-textarea-autosize';\n\n\n\nimport { Route, HashRouter, Switch } from \"react-router-dom\";\n\nimport { Pie } from 'react-chartjs-2';\nimport ReactTable from 'react-table';\nimport { ReactTableDefaults } from 'react-table'\n\nimport 'react-table/react-table.css'\n\nObject.assign(ReactTableDefaults, {\n  defaultPageSize: 15,\n  showPageSizeOptions: false,\n  // showPaginationBottom: false\n\n  // etc...\n})\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      start_flag: 1,\n      rule_arr: [],\n      A금융적격: '',\n      B금융적격: '',\n      C금융적격: '',\n      D금융적격: '',\n      E금융적격: '',\n      F금융적격: '',\n      G금융적격: '',\n      H금융적격: '',\n      I금융적격: '',\n      J금융적격: '',\n      K금융적격: '',\n      대통령령기준금액: 500,\n      금융위원회가정한금액: 2000000000,\n      적격count: 0,\n      A_대통령령_30_2: 9999999999999999999999,\n      B_대통령령_30_2: 9999999999999999999999,\n      C_대통령령_30_2: 9999999999999999999999,\n      D_대통령령_30_2: 9999999999999999999999,\n      E_대통령령_30_2: 9999999999999999999999,\n      F_대통령령_30_2: 9999999999999999999999,\n      G_대통령령_30_2: 9999999999999999999999,\n      H_대통령령_30_2: 9999999999999999999999,\n      I_대통령령_30_2: 9999999999999999999999,\n      J_대통령령_30_2: 9999999999999999999999,\n      K_대통령령_30_2: 9999999999999999999999,\n\n      A_대통령령_30_3_1: 9999999999999999999999,\n      B_대통령령_30_3_1: 9999999999999999999999,\n      C_대통령령_30_3_1: 9999999999999999999999,\n      D_대통령령_30_3_1: 9999999999999999999999,\n      E_대통령령_30_3_1: 9999999999999999999999,\n      F_대통령령_30_3_1: 9999999999999999999999,\n      G_대통령령_30_3_1: 9999999999999999999999,\n      H_대통령령_30_3_1: 9999999999999999999999,\n      I_대통령령_30_3_1: 9999999999999999999999,\n      J_대통령령_30_3_1: 9999999999999999999999,\n      K_대통령령_30_3_1: 9999999999999999999999,\n      \n      A_대통령령_30_3_2: 9999999999999999999999,\n      B_대통령령_30_3_2: 9999999999999999999999,\n      C_대통령령_30_3_2: 9999999999999999999999,\n      D_대통령령_30_3_2: 9999999999999999999999,\n      E_대통령령_30_3_2: 9999999999999999999999,\n      F_대통령령_30_3_2: 9999999999999999999999,\n      G_대통령령_30_3_2: 9999999999999999999999,\n      H_대통령령_30_3_2: 9999999999999999999999,\n      I_대통령령_30_3_2: 9999999999999999999999,\n      J_대통령령_30_3_2: 9999999999999999999999,\n      K_대통령령_30_3_2: 9999999999999999999999,\n      A금융기관: {\n        총자산: 100,\n        총부채: 30,\n        신청업무: \"전자화폐의발행및관리업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 700,\n        가입범위: \"대통령령기준가입범위외\",\n        자본금: 5000000000,\n        회사의종류: \"합명회사\",\n        출자총액: 7000000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 1000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: true,\n        금융위원회허가여부:false,\n        유동성비율:0.3,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n      },\n      B금융기관: {\n        총자산: 100,\n        총부채: 110,\n        신청업무: \"전자자금이체업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 500,\n        가입범위: \"대통령령기준가입범위외\",\n        자본금: 4000000000,\n        회사의종류: \"합자회사\",\n        출자총액: 2000000000,\n        분기별전자금융거래총액: 600000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 1000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: false,\n        금융위원회허가여부:true,\n        유동성비율:0.6,\n        자기자본: 4000000000,\n        납입자본금: 4500000000\n\n      },\n      C금융기관: {\n        총자산: 90,\n        총부채: 90,\n        신청업무: \"직불전자지급수단의발행및관리업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 700,\n        가입범위: \"대통령령기준가입범위외\",\n        자본금: 3000000000,\n        회사의종류: \"유한책임회사\",\n        출자총액: 4000000000,\n        분기별전자금융거래총액: 800000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 1000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: true,\n        금융위원회허가여부:false,\n        유동성비율:0.6,\n        자기자본: 3000000000,\n        납입자본금: 4500000000\n\n      },\n      D금융기관: {\n        총자산: 90,\n        총부채: 80,\n        신청업무: \"선불전자지급수단의발행및관리업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 600,\n        가입범위: \"대통령령기준가입범위외\",\n        자본금: 7000000000,\n        회사의종류: \"특별법에따라설립된법인\",\n        출자총액: 6000000000,\n        분기별전자금융거래총액: 700000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 1000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: true,\n        금융위원회허가여부:true,\n        유동성비율:0.3,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n      },\n      E금융기관: {\n        총자산: 90,\n        총부채: 60,\n        신청업무: \"전자지급결제대행업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 600,\n        가입범위: \"대통령령기준가입범위외\",\n        자본금: 2000000000,\n        회사의종류: \"유한회사\",\n        출자총액: 7000000000,\n        분기별전자금융거래총액: 950000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 1000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: false,\n        금융위원회허가여부:false,\n        유동성비율:0.6,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n      },\n      F금융기관: {\n        총자산: 90,\n        총부채: 50,\n        신청업무: \"대통령령이정하는전자금융업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 750,\n        가입범위: \"대통령령기준가입범위외\",\n        자본금: 3000000000,\n        회사의종류: \"주식회사\",\n        출자총액: 2000000000,\n        분기별전자금융거래총액: 400000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 100000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: false,\n        금융위원회허가여부:true,\n        유동성비율:0.6,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n      },\n      G금융기관: {\n        총자산: 90,\n        총부채: 75,\n        신청업무: \"대통령령이정하는전자지급결제대행에관한업무\",\n        가맹점위치: \"대통령령기준범위\",\n        총발행잔액: 700,\n        가입범위: \"대통령령기준가입범위\",\n        자본금: 9000000000,\n        회사의종류: \"합명회사\",\n        출자총액: 5000000000,\n        분기별전자금융거래총액: 900000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 100000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: true,\n        금융위원회허가여부:false,\n        유동성비율:0.6,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n\n      },\n      H금융기관: {\n        총자산: 90,\n        총부채: 25,\n        신청업무: \"전자채권의등록및관리업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 900,\n        가입범위: \"대통령령기준가입범위\",\n        자본금: 1000000000,\n        회사의종류: \"주식회사\",\n        출자총액: 7000000000,\n        분기별전자금융거래총액: 600000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 10000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: false,\n        금융위원회허가여부:true,\n        유동성비율:0.6,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n\n      },\n      I금융기관: {\n        총자산: 100,\n        총부채: 50,\n        신청업무: \"제15조제3항제1호업무\",\n        가맹점위치: \"대통령령기준범위\",\n        총발행잔액: 750,\n        가입범위: \"대통령령기준가입범위\",\n        자본금: 3000000000,\n        회사의종류: \"주식회사\",\n        출자총액: 7000000000,\n        분기별전자금융거래총액: 2000000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 10000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: false,\n        금융위원회허가여부:true,\n        유동성비율:0.2,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n      },\n      \n      J금융기관: {\n        총자산: 70,\n        총부채: 75,\n        신청업무: \"제15조제3항제2호업무\",\n        가맹점위치: \"대통령령기준범위\",\n        총발행잔액: 500,\n        가입범위: \"대통령령기준가입범위\",\n        자본금: 9500000000,\n        회사의종류: \"유한회사\",\n        출자총액: 4000000000,\n        분기별전자금융거래총액: 900000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 10000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: false,\n        금융위원회허가여부:false,\n        유동성비율:0.6,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n      },\n      K금융기관: {\n        총자산: 90,\n        총부채: 25,\n        신청업무: \"전자채권의등록및관리업무\",\n        가맹점위치: \"대통령령기준범위외\",\n        총발행잔액: 900,\n        가입범위: \"대통령령기준가입범위\",\n        자본금: 1000000000,\n        회사의종류: \"특별법에따라설립된법인\",\n        출자총액: 9000000000,\n        분기별전자금융거래총액: 400000000,\n        전분기전자금융거래총액: 3000000000,\n        금분기전자금융거래총액: 3000000000,\n        미상환잔액: 10000000000,\n        투자위험성낮은자산: 20,\n        미정산잔액: 20,\n        금융위원회등록여부: false,\n        금융위원회허가여부:false,\n        유동성비율:0.6,\n        자기자본: 5000000000,\n        납입자본금: 4500000000\n\n      }\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.A = this.A.bind(this);\n    this.B = this.B.bind(this);\n    this.C = this.C.bind(this);\n    this.D = this.D.bind(this);\n    this.E = this.E.bind(this);\n    // this.F = this.F.bind(this);\n    // this.G = this.G.bind(this);\n    // this.H = this.H.bind(this);\n    // this.I = this.I.bind(this);\n    // this.J = this.J.bind(this);\n    // this.K = this.K.bind(this);\n    this.getrule();\n\n  }\n\n  componentWillMount() {\n    // this.getrule();\n    // setTimeout(() => { this.handleSubmit(); }, 0)\n    this.getrule();\n\n    setTimeout(() => { this.set_president(); setTimeout(() => { this.handleSubmit(); }, 0); }, 0);\n\n  }\n\n  set_president() {\n    if (this.state.A금융기관.신청업무 == \"전자자금이체업무\") {\n      this.setState({ A_대통령령_30_2: 3000000000 })\n\n    } else if (this.state.A금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.A금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n      this.setState({ A_대통령령_30_2: 2000000000 })\n\n    }\n    \n    \n \n\n    if (this.state.B금융기관.신청업무 == \"전자자금이체업무\") {\n      this.setState({ B_대통령령_30_2: 3000000000 })\n\n    } else if (this.state.B금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.B금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n      this.setState({ B_대통령령_30_2: 2000000000 })\n    }\n\n    if (this.state.C금융기관.신청업무 == \"전자자금이체업무\") {\n      this.setState({ C_대통령령_30_2: 3000000000 })\n\n    } else if (this.state.B금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.C금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n      this.setState({ C_대통령령_30_2: 2000000000 })\n\n    }\n\n    if (this.state.D금융기관.신청업무 == \"전자자금이체업무\") {\n      this.setState({ D_대통령령_30_2: 3000000000 })\n\n    } else if (this.state.D금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.D금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n      this.setState({ D_대통령령_30_2: 2000000000 })\n\n    }\n\n    if (this.state.E금융기관.신청업무 == \"전자자금이체업무\") {\n      this.setState({ E_대통령령_30_2: 3000000000 })\n\n    } else if (this.state.E금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.E금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n      this.setState({ E_대통령령_30_2: 2000000000 })\n\n    }\n\n    // if (this.state.F금융기관.신청업무 == \"전자자금이체업무\") {\n    //   this.setState({ F_대통령령_30_2: 3000000000 })\n\n    // } else if (this.state.F금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.F금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n    //   this.setState({ F_대통령령_30_2: 2000000000 })\n\n    // }\n\n    // if (this.state.G금융기관.신청업무 == \"전자자금이체업무\") {\n    //   this.setState({ G_대통령령_30_2: 3000000000 })\n\n    // } else if (this.state.G금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.G금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n    //   this.setState({ G_대통령령_30_2: 2000000000 })\n\n    // }\n\n    // if (this.state.H금융기관.신청업무 == \"전자자금이체업무\") {\n    //   this.setState({ H_대통령령_30_2: 3000000000 })\n\n    // } else if (this.state.H금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.H금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n    //   this.setState({ H_대통령령_30_2: 2000000000 })\n\n    // }\n    // if (this.state.I금융기관.신청업무 == \"전자자금이체업무\") {\n    //   this.setState({ I_대통령령_30_2: 3000000000 })\n\n    // } else if (this.state.I금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.I금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n    //   this.setState({ I_대통령령_30_2: 2000000000 })\n\n    // }\n\n    // if (this.state.J금융기관.신청업무 == \"전자자금이체업무\") {\n    //   this.setState({ J_대통령령_30_2: 3000000000 })\n\n    // } else if (this.state.J금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.J금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n    //   this.setState({ J_대통령령_30_2: 2000000000 })\n\n    // }\n    // if (this.state.K금융기관.신청업무 == \"전자자금이체업무\") {\n    //   this.setState({ K_대통령령_30_2: 3000000000 })\n\n    // } else if (this.state.K금융기관.신청업무 == \"직불전자지급수단의발행및관리업무\" || this.state.K금융기관.신청업무 == \"선불전자지급수단의발행및관리업무\") {\n    //   this.setState({ K_대통령령_30_2: 2000000000 })\n\n    // }\n\n\n    if (this.state.A금융기관.신청업무 == \"전자지급결제대행업무\" || this.state.A금융기관.신청업무 == \"제15조제3항제1호업무\") {\n      this.setState({ A_대통령령_30_3_1: 300000000 })\n      this.setState({A_대통령령_30_3_2:1000000000})\n\n    }else if ( this.state.A금융기관.신청업무 == \"제15조제3항제2호업무\") {\n      this.setState({ A_대통령령_30_3_1: 300000000 })\n      this.setState({A_대통령령_30_3_2:500000000})\n\n    }\n\n    if (this.state.B금융기관.신청업무 == \"전자지급결제대행업무\" || this.state.B금융기관.신청업무 == \"제15조제3항제1호업무\") {\n      this.setState({ B_대통령령_30_3_1: 300000000 })\n      this.setState({B_대통령령_30_3_2:1000000000})\n\n    }else if ( this.state.B금융기관.신청업무 == \"제15조제3항제2호업무\") {\n      this.setState({ B_대통령령_30_3_1: 300000000 })\n      this.setState({B_대통령령_30_3_2:500000000})\n\n    }   if (this.state.C금융기관.신청업무 == \"전자지급결제대행업무\" || this.state.C금융기관.신청업무 == \"제15조제3항제1호업무\") {\n      this.setState({ C_대통령령_30_3_1: 300000000 })\n      this.setState({C_대통령령_30_3_2:1000000000})\n\n    }else if ( this.state.D금융기관.신청업무 == \"제15조제3항제2호업무\") {\n      this.setState({ D_대통령령_30_3_1: 300000000 })\n      this.setState({D_대통령령_30_3_2:500000000})\n\n    }   if (this.state.E금융기관.신청업무 == \"전자지급결제대행업무\" || this.state.E금융기관.신청업무 == \"제15조제3항제1호업무\") {\n      this.setState({ E_대통령령_30_3_1: 300000000 })\n      this.setState({E_대통령령_30_3_2:1000000000})\n\n    \n    }\n    // else if ( this.state.F금융기관.신청업무 == \"제15조제3항제2호업무\") {\n    //   this.setState({ F_대통령령_30_3_1: 300000000 })\n    //   this.setState({F_대통령령_30_3_2:500000000})\n\n    // }   if (this.state.G금융기관.신청업무 == \"전자지급결제대행업무\" || this.state.G금융기관.신청업무 == \"제15조제3항제1호업무\") {\n    //   this.setState({ G_대통령령_30_3_1: 300000000 })\n    //   this.setState({G_대통령령_30_3_2:1000000000})\n\n    // }else if ( this.state.H금융기관.신청업무 == \"제15조제3항제2호업무\") {\n    //   this.setState({ H_대통령령_30_3_1: 300000000 })\n    //   this.setState({H_대통령령_30_3_2:500000000})\n\n    // }   if (this.state.I금융기관.신청업무 == \"전자지급결제대행업무\" || this.state.I금융기관.신청업무 == \"제15조제3항제1호업무\") {\n    //   this.setState({ I_대통령령_30_3_1: 300000000 })\n    //   this.setState({I_대통령령_30_3_2:1000000000})\n\n    // }else if ( this.state.J금융기관.신청업무 == \"제15조제3항제2호업무\") {\n    //   this.setState({ J_대통령령_30_3_1: 300000000 })\n    //   this.setState({J_대통령령_30_3_2:500000000})\n\n    // }   if (this.state.K금융기관.신청업무 == \"전자지급결제대행업무\" || this.state.K금융기관.신청업무 == \"제15조제3항제1호업무\") {\n    //   this.setState({ K_대통령령_30_3_1: 300000000 })\n    //   this.setState({K_대통령령_30_3_2:1000000000})\n\n    // }\n\n\n\n  }\n\n  handleChange(event) {\n    this.setState({ rule_arr: update(this.state.rule_arr, { 3: { $set: event.target.value } }) });\n\n  }\n\n  count적격() {\n    let 적격count = 0;\n\n    if (this.state.A금융적격 == this.state.rule_arr[7]) {\n      적격count++;\n    }\n    if (this.state.B금융적격 == this.state.rule_arr[7]) {\n      적격count++;\n\n    }\n    if (this.state.C금융적격 == this.state.rule_arr[7]) {\n      적격count++;\n\n    }\n    if (this.state.D금융적격 == this.state.rule_arr[7]) {\n      적격count++;\n\n    }\n    if (this.state.E금융적격 == this.state.rule_arr[7]) {\n      적격count++;\n      this.setState({ 적격count });\n\n    } else {\n\n      this.setState({ 적격count });\n    }\n\n\n  }\n  \n  A() {\n    let 총자산 = this.state.A금융기관.총자산;\n    let 총부채 = this.state.A금융기관.총부채;\n    let 신청업무 = this.state.A금융기관.신청업무;\n    let 가맹점위치 = this.state.A금융기관.가맹점위치;\n    let 총발행잔액 = this.state.A금융기관.가입범위;\n    let 대통령령기준금액 = this.state.A금융기관.대통령령기준금액;\n    let 가입범위 = this.state.A금융기관.가입범위;\n    let 자본금 = this.state.A금융기관.자본금;\n    let 출자총액 = this.state.A금융기관.출자총액;\n    let 회사의종류 = this.state.A금융기관.회사의종류;\n    let 대통령령이정한금액_30_2 = this.state.A_대통령령_30_2;\n    let 분기별전자금융거래총액 = this.state.A금융기관.분기별전자금융거래총액;\n    let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n    let 전분기전자금융거래총액 = this.state.A금융기관.전분기전자금융거래총액;\n    let 금분기전자금융거래총액 = this.state.A금융기관.금분기전자금융거래총액;\n    let 미상환잔액 = this.state.A금융기관.미상환잔액;\n    let 금융위원회등록여부 = this.state.A금융기관.금융위원회등록여부;\n    let 투자위험성낮은자산 = this.state.A금융기관.투자위험성낮은자산;\n    let 미정산잔액 = this.state.A금융기관.미정산잔액\n\n    let 대통령령이정한금액_30_3_2 = this.state.A_대통령령_30_3_2;\n    let 대통령령이정한금액_30_3_1 = this.state.A_대통령령_30_3_1;\n    let 금융위원회허가여부 = this.state.A금융기관.금융위원회허가여부;\nlet 유동성비율=this.state.A금융기관.유동성비율;\nlet 자기자본 = this.state.A금융기관.자기자본;\nlet 납입자본금 = this.state.A금융기관.납입자본금;\n\n    if (eval(this.state.rule_arr[3])) {\n      this.setState({ A금융적격: this.state.rule_arr[7] });\n      setTimeout(() => { this.count적격(); }, 0)\n    } else {\n      if(this.state.rule_arr[7]==\"유\"){\n      this.setState({ A금융적격: '무' });\n      }else{ \n            this.setState({ A금융적격: 'FALSE' });\n      }\n      setTimeout(() => { this.count적격(); }, 0)\n    }\n\n    // this.B();\n  }\n\n\n  B() {\n    let 총자산 = this.state.B금융기관.총자산;\n    let 총부채 = this.state.B금융기관.총부채;\n    let 신청업무 = this.state.B금융기관.신청업무;\n    let 가맹점위치 = this.state.B금융기관.가맹점위치;\n    let 총발행잔액 = this.state.B금융기관.가입범위;\n    let 대통령령기준금액 = this.state.B금융기관.대통령령기준금액;\n    let 가입범위 = this.state.B금융기관.가입범위;\n    let 자본금 = this.state.B금융기관.자본금;\n    let 출자총액 = this.state.B금융기관.출자총액;\n    let 회사의종류 = this.state.B금융기관.회사의종류;\n    let 대통령령이정한금액_30_2 = this.state.B_대통령령_30_2;\n    let 분기별전자금융거래총액 = this.state.B금융기관.분기별전자금융거래총액;\n    let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n    let 대통령령이정한금액_30_3_2 = this.state.B_대통령령_30_3_2;\n\n    let 대통령령이정한금액_30_3_1 = this.state.B_대통령령_30_3_1;\n    let 전분기전자금융거래총액 = this.state.B금융기관.전분기전자금융거래총액;\n    let 금분기전자금융거래총액 = this.state.B금융기관.금분기전자금융거래총액;\n    let 미상환잔액 = this.state.B금융기관.미상환잔액;\n    let 투자위험성낮은자산 = this.state.B금융기관.투자위험성낮은자산;\n    let 미정산잔액 = this.state.B금융기관.미정산잔액;\n    let 금융위원회등록여부 = this.state.B금융기관.금융위원회등록여부;\n    let 금융위원회허가여부 = this.state.B금융기관.금융위원회허가여부;\n    let 유동성비율=this.state.B금융기관.유동성비율;\n    let 자기자본 = this.state.B금융기관.자기자본;\n    let 납입자본금 = this.state.B금융기관.납입자본금;\n    if (eval(this.state.rule_arr[3])) {\n      this.setState({ B금융적격: this.state.rule_arr[7] });\n      setTimeout(() => { this.count적격(); }, 0)\n\n    } else {\n      if(this.state.rule_arr[7]==\"유\"){\n        this.setState({ B금융적격: '무' });\n        }else{\n          this.setState({ B금융적격: 'FALSE' });\n        }     \n         setTimeout(() => { this.count적격(); }, 0)\n\n    }\n    // this.C();\n\n  }\n  C() {\n    let 총자산 = this.state.C금융기관.총자산;\n    let 총부채 = this.state.C금융기관.총부채;\n    let 신청업무 = this.state.C금융기관.신청업무;\n    let 가맹점위치 = this.state.C금융기관.가맹점위치;\n    let 총발행잔액 = this.state.C금융기관.가입범위;\n    let 대통령령기준금액 = this.state.C금융기관.대통령령기준금액;\n    let 가입범위 = this.state.C금융기관.가입범위;\n    let 자본금 = this.state.C금융기관.자본금;\n    let 출자총액 = this.state.C금융기관.출자총액;\n    let 회사의종류 = this.state.C금융기관.회사의종류;\n    let 대통령령이정한금액_30_2 = this.state.C_대통령령_30_2;\n    let 분기별전자금융거래총액 = this.state.C금융기관.분기별전자금융거래총액;\n    let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n    let 대통령령이정한금액_30_3_2 = this.state.C_대통령령_30_3_2;\n    let 대통령령이정한금액_30_3_1 = this.state.C_대통령령_30_3_1;\n\n    let 전분기전자금융거래총액 = this.state.C금융기관.전분기전자금융거래총액;\n    let 금분기전자금융거래총액 = this.state.C금융기관.금분기전자금융거래총액;\n    let 미상환잔액 = this.state.C금융기관.미상환잔액;\n    let 투자위험성낮은자산 = this.state.C금융기관.투자위험성낮은자산;\n    let 미정산잔액 = this.state.C금융기관.미정산잔액;\n    let 금융위원회등록여부 = this.state.C금융기관.금융위원회등록여부;\n    let 금융위원회허가여부 = this.state.C금융기관.금융위원회허가여부;\n    let 유동성비율=this.state.C금융기관.유동성비율;\n    let 자기자본 = this.state.C금융기관.자기자본;\n    let 납입자본금 = this.state.C금융기관.납입자본금;\n    if (eval(this.state.rule_arr[3])) {\n      this.setState({ C금융적격: this.state.rule_arr[7] });\n      setTimeout(() => { this.count적격(); }, 0)\n    } else {\n      if(this.state.rule_arr[7]==\"유\"){\n        this.setState({ C금융적격: '무' });\n        }else{\n          this.setState({ C금융적격: 'FALSE' });\n        }      setTimeout(() => { this.count적격(); }, 0)\n    }\n    // this.D();\n\n  }\n  D() {\n    let 총자산 = this.state.D금융기관.총자산;\n    let 총부채 = this.state.D금융기관.총부채;\n    let 신청업무 = this.state.D금융기관.신청업무;\n    let 가맹점위치 = this.state.D금융기관.가맹점위치;\n    let 총발행잔액 = this.state.D금융기관.가입범위;\n    let 대통령령기준금액 = this.state.D금융기관.대통령령기준금액;\n    let 가입범위 = this.state.D금융기관.가입범위;\n    let 자본금 = this.state.D금융기관.자본금;\n    let 출자총액 = this.state.D금융기관.출자총액;\n    let 회사의종류 = this.state.D금융기관.회사의종류;\n    let 대통령령이정한금액_30_2 = this.state.D_대통령령_30_2;\n    let 분기별전자금융거래총액 = this.state.D금융기관.분기별전자금융거래총액;\n    let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n    let 대통령령이정한금액_30_3_2 = this.state.D_대통령령_30_3_2;\n\n    let 대통령령이정한금액_30_3_1 = this.state.D_대통령령_30_3_1;\n    let 전분기전자금융거래총액 = this.state.D금융기관.전분기전자금융거래총액;\n    let 금분기전자금융거래총액 = this.state.D금융기관.금분기전자금융거래총액;\n    let 미상환잔액 = this.state.D금융기관.미상환잔액;\n    let 투자위험성낮은자산 = this.state.D금융기관.투자위험성낮은자산;\n    let 미정산잔액 = this.state.D금융기관.미정산잔액;\n    let 금융위원회등록여부 = this.state.D금융기관.금융위원회등록여부;\n    let 금융위원회허가여부 = this.state.D금융기관.금융위원회허가여부;\n    let 유동성비율=this.state.D금융기관.유동성비율;\n    let 자기자본 = this.state.D금융기관.자기자본;\n    let 납입자본금 = this.state.D금융기관.납입자본금;\n    if (eval(this.state.rule_arr[3])) {\n      this.setState({ D금융적격: this.state.rule_arr[7] });\n      setTimeout(() => { this.count적격(); }, 0)\n\n    } else {\n      if(this.state.rule_arr[7]==\"유\"){\n        this.setState({ D금융적격: '무' });\n        }else{\n          this.setState({ D금융적격: 'FALSE' });\n        }      setTimeout(() => { this.count적격(); }, 0)\n    }\n    // this.E();\n\n  }\n  E() {\n    let 총자산 = this.state.E금융기관.총자산;\n    let 총부채 = this.state.E금융기관.총부채;\n    let 신청업무 = this.state.E금융기관.신청업무;\n    let 가맹점위치 = this.state.E금융기관.가맹점위치;\n    let 총발행잔액 = this.state.E금융기관.가입범위;\n    let 대통령령기준금액 = this.state.E금융기관.대통령령기준금액;\n    let 가입범위 = this.state.E금융기관.가입범위;\n    let 자본금 = this.state.E금융기관.자본금;\n    let 출자총액 = this.state.E금융기관.출자총액;\n    let 회사의종류 = this.state.E금융기관.회사의종류;\n    let 대통령령이정한금액_30_2 = this.state.E_대통령령_30_2;\n    let 분기별전자금융거래총액 = this.state.E금융기관.분기별전자금융거래총액;\n    let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n    let 대통령령이정한금액_30_3_2 = this.state.E_대통령령_30_3_2;\n\n    let 대통령령이정한금액_30_3_1 = this.state.E_대통령령_30_3_1;\n    let 전분기전자금융거래총액 = this.state.E금융기관.전분기전자금융거래총액;\n    let 금분기전자금융거래총액 = this.state.E금융기관.금분기전자금융거래총액;\n    let 미상환잔액 = this.state.E금융기관.미상환잔액;\n    let 투자위험성낮은자산 = this.state.E금융기관.투자위험성낮은자산;\n    let 미정산잔액 = this.state.E금융기관.미정산잔액;\n    let 금융위원회등록여부 = this.state.E금융기관.금융위원회등록여부;\n    let 금융위원회허가여부 = this.state.E금융기관.금융위원회허가여부;\n    let 유동성비율=this.state.E금융기관.유동성비율;\n    let 자기자본 = this.state.E금융기관.자기자본;\n    let 납입자본금 = this.state.E금융기관.납입자본금;\n\n    if (eval(this.state.rule_arr[3])) {\n      this.setState({ E금융적격: this.state.rule_arr[7] });\n      setTimeout(() => { this.count적격(); }, 0)\n\n    } else {\n      if(this.state.rule_arr[7]==\"유\"){\n        this.setState({ E금융적격: '무' });\n        }else{\n          this.setState({ E금융적격: 'FALSE' });\n        }      setTimeout(() => { this.count적격(); }, 0)\n    }\n    // this.F();\n\n  }\n  // F() {\n  //   let 총자산 = this.state.F금융기관.총자산;\n  //   let 총부채 = this.state.F금융기관.총부채;\n  //   let 신청업무 = this.state.F금융기관.신청업무;\n  //   let 가맹점위치 = this.state.F금융기관.가맹점위치;\n  //   let 총발행잔액 = this.state.F금융기관.가입범위;\n  //   let 대통령령기준금액 = this.state.F금융기관.대통령령기준금액;\n  //   let 가입범위 = this.state.F금융기관.가입범위;\n  //   let 자본금 = this.state.F금융기관.자본금;\n  //   let 출자총액 = this.state.F금융기관.출자총액;\n  //   let 회사의종류 = this.state.F금융기관.회사의종류;\n  //   let 대통령령이정한금액_30_2 = this.state.F_대통령령_30_2;\n  //   let 분기별전자금융거래총액 = this.state.F금융기관.분기별전자금융거래총액;\n  //   let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n  //   let 대통령령이정한금액_30_3_2 = this.state.F_대통령령_30_3_2;\n  //   let 대통령령이정한금액_30_3_1 = this.state.F_대통령령_30_3_1;\n\n  //   let 전분기전자금융거래총액 = this.state.F금융기관.전분기전자금융거래총액;\n  //   let 금분기전자금융거래총액 = this.state.F금융기관.금분기전자금융거래총액;\n  //   let 미상환잔액 = this.state.F금융기관.미상환잔액;\n  //   let 투자위험성낮은자산 = this.state.F금융기관.투자위험성낮은자산;\n  //   let 미정산잔액 = this.state.F금융기관.미정산잔액;\n  //   let 금융위원회등록여부 = this.state.F금융기관.금융위원회등록여부;\n  //   let 금융위원회허가여부 = this.state.F금융기관.금융위원회허가여부;\n  //   let 유동성비율=this.state.F금융기관.유동성비율;\n  //   let 자기자본 = this.state.F금융기관.자기자본;\n  //   let 납입자본금 = this.state.F금융기관.납입자본금;\n  //   if (eval(this.state.rule_arr[3])) {\n  //     this.setState({ F금융적격: this.state.rule_arr[7] });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   } else {\n  //     this.setState({ F금융적격: '.' });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   }\n  //   // this.G();\n\n  // }\n  // G() {\n  //   let 총자산 = this.state.G금융기관.총자산;\n  //   let 총부채 = this.state.G금융기관.총부채;\n  //   let 신청업무 = this.state.G금융기관.신청업무;\n  //   let 가맹점위치 = this.state.G금융기관.가맹점위치;\n  //   let 총발행잔액 = this.state.G금융기관.가입범위;\n  //   let 대통령령기준금액 = this.state.G금융기관.대통령령기준금액;\n  //   let 가입범위 = this.state.G금융기관.가입범위;\n  //   let 자본금 = this.state.G금융기관.자본금;\n  //   let 출자총액 = this.state.G금융기관.출자총액;\n  //   let 회사의종류 = this.state.G금융기관.회사의종류;\n  //   let 대통령령이정한금액_30_2 = this.state.G_대통령령_30_2;\n  //   let 분기별전자금융거래총액 = this.state.G금융기관.분기별전자금융거래총액;\n  //   let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n  //   let 대통령령이정한금액_30_3_2 = this.state.G_대통령령_30_3_2;\n  //   let 대통령령이정한금액_30_3_1 = this.state.G_대통령령_30_3_1;\n\n  //   let 전분기전자금융거래총액 = this.state.G금융기관.전분기전자금융거래총액;\n  //   let 금분기전자금융거래총액 = this.state.G금융기관.금분기전자금융거래총액;\n  //   let 미상환잔액 = this.state.G금융기관.미상환잔액;\n  //   let 투자위험성낮은자산 = this.state.G금융기관.투자위험성낮은자산;\n  //   let 미정산잔액 = this.state.G금융기관.미정산잔액;\n  //   let 금융위원회등록여부 = this.state.G금융기관.금융위원회등록여부;\n  //   let 금융위원회허가여부 = this.state.G금융기관.금융위원회허가여부;\n  //   let 유동성비율=this.state.G금융기관.유동성비율;\n  //   let 자기자본 = this.state.G금융기관.자기자본;\n  //   let 납입자본금 = this.state.G금융기관.납입자본금;\n  //   if (eval(this.state.rule_arr[3])) {\n  //     this.setState({ G금융적격: this.state.rule_arr[7] });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   } else {\n  //     this.setState({ G금융적격: '.' });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   }\n  //   // this.H();\n\n  // }\n  // H() {\n  //   let 총자산 = this.state.H금융기관.총자산;\n  //   let 총부채 = this.state.H금융기관.총부채;\n  //   let 신청업무 = this.state.H금융기관.신청업무;\n  //   let 가맹점위치 = this.state.H금융기관.가맹점위치;\n  //   let 총발행잔액 = this.state.H금융기관.가입범위;\n  //   let 대통령령기준금액 = this.state.H금융기관.대통령령기준금액;\n  //   let 가입범위 = this.state.H금융기관.가입범위;\n  //   let 자본금 = this.state.H금융기관.자본금;\n  //   let 출자총액 = this.state.H금융기관.출자총액;\n  //   let 회사의종류 = this.state.H금융기관.회사의종류;\n  //   let 대통령령이정한금액_30_2 = this.state.H_대통령령_30_2;\n  //   let 분기별전자금융거래총액 = this.state.H금융기관.분기별전자금융거래총액;\n  //   let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n  //   let 대통령령이정한금액_30_3_2 = this.state.H_대통령령_30_3_2;\n  //   let 대통령령이정한금액_30_3_1 = this.state.H_대통령령_30_3_1;\n\n  //   let 전분기전자금융거래총액 = this.state.H금융기관.전분기전자금융거래총액;\n  //   let 금분기전자금융거래총액 = this.state.H금융기관.금분기전자금융거래총액;\n  //   let 미상환잔액 = this.state.H금융기관.미상환잔액;\n  //   let 투자위험성낮은자산 = this.state.H금융기관.투자위험성낮은자산;\n  //   let 미정산잔액 = this.state.H금융기관.미정산잔액;\n  //   let 금융위원회등록여부 = this.state.H금융기관.금융위원회등록여부;\n  //   let 금융위원회허가여부 = this.state.H금융기관.금융위원회허가여부;\n  //   let 유동성비율=this.state.H금융기관.유동성비율;\n  //   let 자기자본 = this.state.H금융기관.자기자본;\n  //   let 납입자본금 = this.state.H금융기관.납입자본금;\n  //   if (eval(this.state.rule_arr[3])) {\n  //     this.setState({ H금융적격: this.state.rule_arr[7] });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n\n  //   } else {\n  //     this.setState({ H금융적격: '.' });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   }\n  //   // this.I();\n\n  // }\n  // I() {\n  //   let 총자산 = this.state.I금융기관.총자산;\n  //   let 총부채 = this.state.I금융기관.총부채;\n  //   let 신청업무 = this.state.I금융기관.신청업무;\n  //   let 가맹점위치 = this.state.I금융기관.가맹점위치;\n  //   let 총발행잔액 = this.state.I금융기관.가입범위;\n  //   let 대통령령기준금액 = this.state.I금융기관.대통령령기준금액;\n  //   let 가입범위 = this.state.I금융기관.가입범위;\n  //   let 자본금 = this.state.I금융기관.자본금;\n  //   let 출자총액 = this.state.I금융기관.출자총액;\n  //   let 회사의종류 = this.state.I금융기관.회사의종류;\n  //   let 대통령령이정한금액_30_2 = this.state.I_대통령령_30_2;\n  //   let 분기별전자금융거래총액 = this.state.I금융기관.분기별전자금융거래총액;\n  //   let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n  //   let 대통령령이정한금액_30_3_2 = this.state.I_대통령령_30_3_2;\n  //   let 대통령령이정한금액_30_3_1 = this.state.I_대통령령_30_3_1;\n\n  //   let 전분기전자금융거래총액 = this.state.I금융기관.전분기전자금융거래총액;\n  //   let 금분기전자금융거래총액 = this.state.I금융기관.금분기전자금융거래총액;\n  //   let 미상환잔액 = this.state.I금융기관.미상환잔액;\n  //   let 투자위험성낮은자산 = this.state.I금융기관.투자위험성낮은자산;\n  //   let 미정산잔액 = this.state.I금융기관.미정산잔액;\n  //   let 금융위원회등록여부 = this.state.I금융기관.금융위원회등록여부;\n  //   let 금융위원회허가여부 = this.state.I금융기관.금융위원회허가여부;\n  //   let 유동성비율=this.state.I금융기관.유동성비율;\n  //   let 자기자본 = this.state.I금융기관.자기자본;\n  //   let 납입자본금 = this.state.I금융기관.납입자본금;\n  //   if (eval(this.state.rule_arr[3])) {\n  //     this.setState({ I금융적격: this.state.rule_arr[7] });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   } else {\n  //     this.setState({ I금융적격: '.' });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   }\n  //   // this.J();\n\n  // }\n  // J() {\n  //   let 총자산 = this.state.J금융기관.총자산;\n  //   let 총부채 = this.state.J금융기관.총부채;\n  //   let 신청업무 = this.state.J금융기관.신청업무;\n  //   let 가맹점위치 = this.state.J금융기관.가맹점위치;\n  //   let 총발행잔액 = this.state.J금융기관.가입범위;\n  //   let 대통령령기준금액 = this.state.J금융기관.대통령령기준금액;\n  //   let 가입범위 = this.state.J금융기관.가입범위;\n  //   let 자본금 = this.state.J금융기관.자본금;\n  //   let 출자총액 = this.state.J금융기관.출자총액;\n  //   let 회사의종류 = this.state.J금융기관.회사의종류;\n  //   let 대통령령이정한금액_30_2 = this.state.J_대통령령_30_2;\n  //   let 분기별전자금융거래총액 = this.state.J금융기관.분기별전자금융거래총액;\n  //   let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n  //   let 대통령령이정한금액_30_3_2 =  this.state.J_대통령령_30_3_2;\n  //   let 대통령령이정한금액_30_3_1 = this.state.J_대통령령_30_3_1;\n\n  //   let 전분기전자금융거래총액 = this.state.J금융기관.전분기전자금융거래총액;\n  //   let 금분기전자금융거래총액 = this.state.J금융기관.금분기전자금융거래총액;\n  //   let 미상환잔액 = this.state.J금융기관.미상환잔액;\n  //   let 투자위험성낮은자산 = this.state.J금융기관.투자위험성낮은자산;\n  //   let 미정산잔액 = this.state.J금융기관.미정산잔액;\n  //   let 금융위원회등록여부 = this.state.J금융기관.금융위원회등록여부;\n  //   let 금융위원회허가여부 = this.state.J금융기관.금융위원회허가여부;\n  //   let 유동성비율=this.state.J금융기관.유동성비율;\n  //   let 자기자본 = this.state.J금융기관.자기자본;\n  //   let 납입자본금 = this.state.J금융기관.납입자본금;\n  //   if (eval(this.state.rule_arr[3])) {\n  //     this.setState({ J금융적격: this.state.rule_arr[7] });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   } else {\n  //     this.setState({ J금융적격: '.' });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   }\n  //   // this.K();\n\n\n  // }\n  // K() {\n  //   let 총자산 = this.state.K금융기관.총자산;\n  //   let 총부채 = this.state.K금융기관.총부채;\n  //   let 신청업무 = this.state.K금융기관.신청업무;\n  //   let 가맹점위치 = this.state.K금융기관.가맹점위치;\n  //   let 총발행잔액 = this.state.K금융기관.가입범위;\n  //   let 대통령령기준금액 = this.state.K금융기관.대통령령기준금액;\n  //   let 가입범위 = this.state.K금융기관.가입범위;\n  //   let 자본금 = this.state.K금융기관.자본금;\n  //   let 출자총액 = this.state.K금융기관.출자총액;\n  //   let 회사의종류 = this.state.K금융기관.회사의종류;\n  //   let 대통령령이정한금액_30_2 = this.state.K_대통령령_30_2;\n  //   let 분기별전자금융거래총액 = this.state.K금융기관.분기별전자금융거래총액;\n  //   let 금융위원회가정한금액 = this.state.금융위원회가정한금액;\n  //   let 대통령령이정한금액_30_3_2 = this.state.K_대통령령_30_3_2;\n  //   let 대통령령이정한금액_30_3_1 = this.state.K_대통령령_30_3_1;\n\n  //   let 전분기전자금융거래총액 = this.state.K금융기관.전분기전자금융거래총액;\n  //   let 금분기전자금융거래총액 = this.state.K금융기관.금분기전자금융거래총액;\n  //   let 미상환잔액 = this.state.K금융기관.미상환잔액;\n  //   let 투자위험성낮은자산 = this.state.K금융기관.투자위험성낮은자산;\n  //   let 미정산잔액 = this.state.K금융기관.미정산잔액;\n  //   let 금융위원회등록여부 = this.state.K금융기관.금융위원회등록여부;\n  //   let 금융위원회허가여부 = this.state.K금융기관.금융위원회허가여부;\n  //   let 유동성비율=this.state.K금융기관.유동성비율;\n  //   let 자기자본 = this.state.K금융기관.자기자본;\n  //   let 납입자본금 = this.state.K금융기관.납입자본금;\n  //   if (eval(this.state.rule_arr[3])) {\n  //     this.setState({ K금융적격: this.state.rule_arr[7] });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   } else {\n  //     this.setState({ K금융적격: '.' });\n  //     setTimeout(() => { this.count적격(); }, 0)\n\n  //   }\n\n\n  // }\n  handleSubmit() {\n\n\n    this.A();\n    this.B()\n    this.C()\n    this.D()\n    this.E()\n   \n\n\n    // this.A(this.B(this.C(this.D(this.E(this.F(this.G(this.H(this.I(this.J(this.K()))))))))));\n\n\n  }\n\n\n  getrule() {\n    let rule = decodeURI(window.location.hash)\n    // console.log(\"DD:\" + rule)\n    let split_rule = rule.split('@');\n    this.setState({ rule_arr: split_rule });\n  }\n  render() {\n    const pieStyle = {\n      position: \"absolute\",\n      width: \"47%\",\n      float: \"left\",\n      // height: \"30%\",\n      // marginLeft: \"25%\",\n      textAlign: \"center\",\n      // left:\"-2%\",\n      marginTop: \"5%\"\n\n    };\n    const pieStyle2 = {\n      position: \"relative\",\n      marginBottom: \"5%\",\n      width: \"50%\",\n      float: \"right\",\n      // float:\"top\",\n      marginTop: \"7%\",\n      marginRight: \"4%\",\n      textAlign: \"center\"\n    };\n\n    const columns = [{\n      Header: <strong>기관</strong>,\n      accessor: 'name' // String-based value accessors!\n    }, {\n      Header: <strong>{this.state.rule_arr[5]}</strong>,\n      accessor: 'status',\n      // Custom cell components!\n    }]\n    const data = {\n\n      datasets: [{\n        data: [this.state.적격count, 5 - this.state.적격count],\n        backgroundColor: [\n          '#36A2EB',\n          '#FF6384'\n\n        ],\n        hoverBackgroundColor: [\n          '#36A2EB',\n          '#FF6384'\n        ]\n      }],\n      labels: [\n        '조건 부합',\n        '조건 미부합',\n      ]\n    };\n    const data_table = [{\n      name: '전자금융업자 1',\n      status: this.state.A금융적격,\n\n    },\n    {\n      name: '전자금융업자 2',\n      status: this.state.B금융적격,\n\n    },\n    {\n      name: '전자금융업자 3',\n      status: this.state.C금융적격,\n\n    },\n    {\n      name: '전자금융업자 4',\n      status: this.state.D금융적격,\n\n    },\n    {\n      name: '전자금융업자 5',\n      status: this.state.E금융적격,\n\n    }\n    ]\n\n    const input_style = {\n      width: \"70%\",\n      // height:\"300px\",\n      fontSize: \"1.5em\"\n    }\n    const input_style1 = {\n      fontSize: \"1.1em\"\n    }\n    const edit_style = {\n      width: \"70px\",\n      fontWeight: \"bold\",\n      fontSize: \"0.8em\",\n    }\n    return (\n      <HashRouter>\n        <div>\n\n          <div style={pieStyle} >\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                <strong>{this.state.rule_arr[1]}</strong> : <div style={input_style1}>{this.state.rule_arr[2]}</div>\n                <TextareaAutosize type=\"text\" style={input_style} value={this.state.rule_arr[3]} onChange={this.handleChange}></TextareaAutosize>\n              </label>\n              {console.log(this.state.rule_arr[3])}<br/>\n              <input type=\"button\" style={edit_style} value=\"수정\" onClick={this.handleSubmit} />\n              <div style={input_style1}>{this.state.rule_arr[4]}<strong>\"{this.state.rule_arr[5]}\"</strong>{this.state.rule_arr[6]}<strong>\"{this.state.rule_arr[7]}\"</strong>{this.state.rule_arr[8]}     </div>\n            </form>\n            <h2></h2>\n            <Pie data={data} />\n\n          </div>\n          <ReactTable\n            style={pieStyle2}\n            data={data_table}\n            columns={columns}\n          />\n\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n"],"sourceRoot":""}